{"version":3,"sources":["Components/Container/Container.js","Components/Layout/Layout.js","Components/Redux/contacts-actions.js","Components/Form/Form.js","Components/ContactsList/ContactList-selectors.js","Components/Contact/Contact.js","Components/ContactsList/ContactsList.js","Components/Filter/Filter.js","App.js","Components/Redux/contacts-reducer.js","Components/Redux/store.js","index.js"],"names":["Container","children","className","protoTypes","PropTypes","node","isRequired","Layout","protoType","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","changeFilter","Form","useState","setName","setNumber","dispatch","useDispatch","nameImputId","numberImputId","handleInputName","e","target","value","reset","onSubmit","preventDefault","contactsActions","htmlFor","type","autoComplete","pattern","title","onChange","required","getFilter","state","contacts","filter","getVisibleContacts","allContacts","items","getItems","normalizeFilter","toLowerCase","includes","Contact","ContactsList","contactData","useSelector","map","onClick","onDeleteContact","Filter","currentTarget","App","createReducer","actions","newContact","find","contact","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fd19446a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"container\">{children}</div>;\n\nContainer.protoTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Container from \"../Container\";\n\nconst Layout = ({ children }) => (\n  <>\n    <Container>{children}</Container>\n  </>\n);\n\nLayout.protoType = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { createAction } from '@reduxjs/toolkit';\r\nimport shortId from 'shortid';\r\n\r\nconst addContact = createAction('contact/add', ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contact/delete');\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport shortId from 'shortid';\nimport contactsActions from '../Redux/contacts-actions';\n\nimport './Form.scss';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameImputId = shortId.generate();\n  const numberImputId = shortId.generate();\n\n  const handleInputName = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(contactsActions.addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <label htmlFor={nameImputId} className=\"name\">\n        Name\n      </label>\n      <input\n        id={nameImputId}\n        className=\"name_input\"\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        onChange={handleInputName}\n        required\n      />\n\n      <label htmlFor={numberImputId} className=\"name\">\n        Phone number\n      </label>\n      <input\n        id={numberImputId}\n        className=\"name_input\"\n        type=\"tel\"\n        autoComplete=\"off\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        onChange={handleInputName}\n        required\n      />\n\n      <button className=\"btn\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const allContacts = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizeFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Contact.scss';\n\nconst Contact = ({ name, number }) => (\n  <>\n    <span className=\"name\">{name}:</span>\n    <span className=\"name\">{number}</span>\n  </>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../Redux/contacts-actions';\nimport { getVisibleContacts } from './ContactList-selectors';\nimport './ContactsList.scss';\n\nimport Contact from '../Contact';\n\nconst ContactsList = () => {\n  const contactData = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className=\"list\">\n      {contactData.map(({ id, name, number }) => (\n        <li className=\"item\" key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../Redux/contacts-actions';\nimport { getFilter } from '../ContactsList/ContactList-selectors';\n\nimport './Filter.scss';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <label className=\"filter\">Find contact by name:</label>\n      <input\n        className=\"name_input\"\n        type=\"text\"\n        value={value}\n        onChange={e =>\n          dispatch(contactsActions.changeFilter(e.currentTarget.value))\n        }\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import Layout from './Components/Layout';\nimport Form from './Components/Form';\nimport ContactsList from './Components/ContactsList';\nimport Filter from './Components/Filter';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <Layout>\n      <div className=\"box\">\n        <h1 className=\"title\">Phonebook</h1>\n        <Form />\n\n        <h2 className=\"contact\">Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    { id: 'id-5', name: 'Davoria Paori', number: '123-56-89' },\r\n    { id: 'id-6', name: 'Salvador Dali', number: '856-48-24' },\r\n  ],\r\n  {\r\n    // [actions.addContact]: (state, { payload }) => [...state, payload],\r\n    [actions.addContact]: (state, { payload }) => {\r\n      const newContact = payload.name.toLowerCase();\r\n      const savedContacts = state.find(\r\n        contact => contact.name.toLowerCase() === newContact,\r\n      );\r\n\r\n      if (savedContacts) {\r\n        alert(payload.name + ' is already in contacts.');\r\n        return;\r\n      }\r\n\r\n      return [...state, payload];\r\n    },\r\n\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport store from './Components/Redux/store';\n\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}